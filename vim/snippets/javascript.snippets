# My personal javascript snippets
snippet clog
	console.log(${1});
snippet clogs
	console.log("${1}:", ${2});
snippet trace 
	console.trace();
snippet here
	console.log("\nHERE:");
snippet wtf 
	console.log("\nWTF:");
snippet lbefore 
	console.log("\nBEFORE:");
snippet lafter 
	console.log("\nAFTER:");
snippet cbe
	if (err) { return cb(err); }
snippet cfunc
	${1:function_name}(${2:args}, function(err, ${3:result}) {
		if (err) { return cb(err); }
		${4}
	});
snippet timeout 
	setTimeout(() => {
	    ${2}
	}, ${1});

snippet timeoutdone
	setTimeout(done, ${1});

# Test Related
snippet mocha
	'use strict';
	const assert = require('assert');
	const support = require('../support'); // adjust this

	describe("${1:MySuite}", function() {
		describe("${2:my_suite}", () => {
			it("${3:my_test}", done => {
				done();
			});
		});
	});
snippet randn 
	support.random.number()
snippet rands 
	support.random.string()
snippet randemail 
	support.random.email()
snippet randdsid 
	support.random.dsid()
snippet befa
	before(done => {
		${1}
		done();
	});
snippet afta
	after(done => {
		${1}
		done();
	});
snippet bef
	before(() => {
		${1}
	});
snippet aft
	after(() => {
		${1}
	});
snippet bfe 
	beforeEach(() => {
		${1}
	});
snippet afe 
	afterEach(() => {
		${1}
	});
snippet strict
	assert.strictEqual(${1:actual}, ${2:expected});
snippet desc
	describe("${1:my_suite}", () => {
		${2}
	});
snippet context
	context("${1:my_suite}", () => {
		${2}
	});
snippet it
	it("${1:my_test}", done => {
		${2}
		done();
	});
snippet When
	context("When ${1}", () => {
		${2}
	});
snippet And
	context("And ${1}", () => {
		${2}
	});
snippet But
	context("But ${1}", () => {
		${2}
	});
snippet Then
	it("Then ${1}", done => {
		${2}
		done();
	});
snippet cke
	check_err(err);
